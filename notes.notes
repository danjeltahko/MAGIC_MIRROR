

https://kentakodashima.medium.com/generate-pem-keys-with-openssl-on-macos-ecac55791373

== Generate Pem Keys with OpenSSL on macOS ==

--> openssl genpkey -algorithm RSA -aes-256-cbc -outform PEM -out private_key.pem -pkeyopt rsa_keygen_bits:2048

# genpkey
    This command generates a private key.
    This command is not supported in the
    old versions of OpenSSL.
# -algorithm RSA
    Specifies the algorithm to use it for
    the key. You can use other algorithms
    such as DH, EC and DSA. This website
    is good for roughly understanding the
    differences between each algorithm.
# -aes-256-cbc
    This option specifies the cypher
    used to encrypt the private key. A
    cypher is an algorithm for performing
    encryption or decryption. According
    to the OpenSSL documentation, any
    algorithm accepted by
    EVP_get_cipherbyname() is acceptable.
    The -aes-256-cbc cypher will encrypt
    the key and asks for a password to use.
# -outform PEM
    Specifies the output format. The DER
    format is also available.
# -out private_key.pem
    Output the key with the specified file.
    In this case, the filename would be
    ‘private_key.pem’.
# -pkeyopt rsa_keygen_bits:2048
    The -pkeyopt option sets the public
    key algorithm. Available options for
    the command are listed here. In this case,
    rsa_keygen_bits:2048 specifies the length
    of the generated key. If not 2048 is used
    by default. The longer length will
    enhance the security, however, it will
    take more time to process.

--> chmod 0400 private_key.pem
--> ssh-keygen -e -f private_key.pem > public_key.pem

# ssh-keygen
    This is the command to generate, manage
    and convert authentication keys for ssh.
    This command is available in macOS by default.
# -e
    This option reads a private or public key
    and allows exporting keys.
# -f
    This is the option to specify the source
    filename.